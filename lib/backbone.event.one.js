// Generated by CoffeeScript 1.3.3
(function() {

  (function(_, Backbone) {
    var objName, one, _i, _len, _ref, _results;
    if (Backbone == null) {
      return;
    }
    one = function(events, handler, context, whenFilter) {
      var fn, k, v, _i, _len, _ref,
        _this = this;
      if (typeof events === "object") {
        for (k in events) {
          v = events[k];
          this.one(k, v, handler, context, whenFilter);
        }
        return this;
      } else if (/\s+/.test(events)) {
        _ref = events.split(/\s+/);
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          k = _ref[_i];
          this.one(k, handler, context, whenFilter);
        }
        return this;
      }
      if (_.isFunction(context)) {
        whenFilter = context;
        context = this;
      }
      if (context == null) {
        context = this;
      }
      if (whenFilter == null) {
        whenFilter = function() {
          return true;
        };
      }
      fn = function() {
        if (!whenFilter.apply(context, arguments)) {
          return;
        }
        _this.off(events, fn, context);
        return handler.apply(context, arguments);
      };
      return this.on(events, fn, context);
    };
    Backbone.Events.one = one;
    _ref = ["Model", "Collection", "View", "Router", "History"];
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      objName = _ref[_i];
      _results.push(_.extend(Backbone[objName].prototype, Backbone.Events));
    }
    return _results;
  })(_, Backbone);

}).call(this);
